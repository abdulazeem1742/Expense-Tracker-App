{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/AccountSummary.js","components/Transaction.js","components/TransactionHistory.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","delTransaction","addTransaction","Balance","balance","useContext","map","transactionAmount","reduce","acc","item","toFixed","AccountSummary","transactionAmounts","income","expense","Math","abs","Transaction","sign","transactionType","description","onClick","TransactionHistory","AddTransaction","useState","setDescription","setTransactionAmount","onSubmit","e","preventDefault","newTransaction","Date","getTime","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ad683a6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n        <h1 className=\"text-center\">\r\n            Expense Tracker App \r\n            <br /> by Abdul Azeem\r\n        </h1>\r\n        </div>\r\n    );\r\n}","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions:state.transactions\r\n                    .filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    };\r\n}","import React, { createContext, useReducer } from 'react';\r\n\r\n// import the Reducer\r\nimport AppReducer from './AppReducer';\r\n\r\n// Create the initial State\r\nconst initialState ={\r\n    transactions: []\r\n}\r\n\r\n// create the global context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// create a Provider for the global context\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] =useReducer(AppReducer, initialState);\r\n\r\n    // Actions for transaction\r\n\r\n    //Delete existing transaction action\r\n    function delTransaction(id) {\r\n        dispatch({\r\n            type:'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n// Add new transaction\r\nfunction addTransaction(transaction){\r\n    dispatch({\r\n        type:'ADD_TRANSACTION',\r\n        payload: transaction\r\n    });\r\n}\r\n\r\n    return(\r\n        <GlobalContext.Provider value={\r\n            {\r\n                transactions: state.transactions,\r\n                delTransaction,\r\n                addTransaction\r\n            }\r\n        }>\r\n            {children}\r\n        </ GlobalContext.Provider>\r\n    );\r\n}","import React, { useContext } from \"react\";\r\n// import React, {useContext} from 'react'\r\n\r\n// import the global state\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const transactionAmounts =transactions.map(transaction => transaction.transactionAmount);\r\n    const balance = transactionAmounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return(\r\n        <div className=\"current-balance\">\r\n            <h3>Current Balance</h3>\r\n            <h1 id=\"balance\">${balance}</h1>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\n\r\n// import the global state\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const AccountSummary = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const transactionAmounts = transactions.map(transaction => transaction.transactionAmount);\r\n\r\n    const income = transactionAmounts\r\n        .filter(transaction => transaction > 0)\r\n        .reduce((acc, transaction) => (acc += transaction), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = Math.abs(transactionAmounts\r\n        .filter(transaction => transaction < 0)\r\n        .reduce((acc, transaction) => (acc += transaction), 0)\r\n        .toFixed(2));\r\n    \r\n    return(\r\n        <div className=\"expense-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">\r\n                    +{income}\r\n                </p>\r\n            </div>\r\n\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">\r\n                    -${expense}\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, {useContext} from \"react\";\r\n\r\n// import the global state\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const Transaction = ({transaction}) => {\r\n\r\n    const {delTransaction} = useContext(GlobalContext);\r\n\r\n    const sign = transaction.transactionAmount > 0 ? '+' : '-';\r\n    const transactionType = transaction.transactionAmount > 0 ? 'plus' : 'minus';\r\n    return (\r\n        <li className= {transactionType}>\r\n        {transaction.description}\r\n        <span>{sign}${Math.abs(transaction.transactionAmount)}</span>\r\n        <button className=\"delete-btn\"\r\n        onClick={() => delTransaction(transaction.id)}>\r\n            X\r\n            </button>\r\n        </li>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\n\r\n// import transaction component\r\n\r\nimport { Transaction } from './Transaction';\r\n\r\n// import the global state\r\nimport {GlobalContext } from '../context/GlobalState';\r\n\r\nexport const TransactionHistory = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    // console.log(transactions);\r\n    return(\r\n        <div>\r\n            <h3>\r\n                TransactionHistory\r\n            </h3>\r\n            <ul className=\"transaction-list\">\r\n                {transactions.map(transaction => (\r\n                    <Transaction key={transaction.id} transaction ={transaction} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from \"react\";\r\n\r\n// import the global state\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [transactionAmount, setTransactionAmount] = useState(0);\r\n    \r\n    const {addTransaction} = useContext(GlobalContext);\r\n    \r\n    const onSubmit =(e) => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: new Date().getTime(),\r\n            description,\r\n            transactionAmount: +transactionAmount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n    return(\r\n        <div>\r\n            <h3>Add New Transaction</h3>\r\n            <form className=\"transaction-form\" onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"description\">\r\n                        Description\r\n                    </label>\r\n                    <input type=\"text\"\r\n                    id=\"description\"\r\n                    value ={description}\r\n                    onChange={(e) => setDescription(e.target.value)} \r\n                    placeholder=\"Details of Transaction\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"transaction\">\r\n                        Transactionamount\r\n                    </label>\r\n                    <input type=\"number\"\r\n                    id=\"transactionamount\"\r\n                    value ={transactionAmount}\r\n                    onChange ={(e) => setTransactionAmount(e.target.value)}\r\n                    placeholder=\"Dollar Value of Transaction\" />\r\n                </div>\r\n                <button className=\"btn\">Add Transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport {Header} from './components/Header';\nimport { Balance } from './components/Balance';\nimport { AccountSummary } from './components/AccountSummary';\nimport { TransactionHistory } from './components/TransactionHistory';\nimport { AddTransaction } from './components/AddTransaction';\nimport './App.css';\n\n// import Reducer\nimport {GlobalProvider } from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <AccountSummary />\n        <TransactionHistory />\n        <AddTransaction />\n      </div>\n      </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}